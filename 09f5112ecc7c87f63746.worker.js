/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./node_modules/babel-loader/lib/index.js?!./src/web/js/workers/Operation.worker.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/createClass.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/regenerator/index.js?");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./src/web/js/workers/Operation.worker.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--5!./src/web/js/workers/Operation.worker.js ***!
  \****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _helpers_OperationHelper_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/OperationHelper.mjs */ \"./src/web/js/helpers/OperationHelper.mjs\");\n\n\n\n/**\n * Worker to handle running operations\n */\n\nself.callbacks = {};\nself.callbacksId = 0;\nself.OperationHelper = new _helpers_OperationHelper_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"](self);\n\nself.addCallback = function (callback) {\n  var callbackid = self.callbacksId;\n  self.callbacksId += 1;\n  self.callbacks[callbackid] = callback;\n  return callbackid;\n};\n\nself.run = /*#__PURE__*/function () {\n  var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(input, language, operations) {\n    var currentInput, _loop, i;\n\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            currentInput = input;\n            _loop = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop(i) {\n              var opClass, opInput, opOutput;\n              return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log(\"Running operation \".concat(i, \" (\").concat(operations[i].displayName, \")\"));\n                      opClass = self.OperationHelper.getOperation(operations[i].name);\n                      opInput = currentInput; // If needed, convert current data to string\n\n                      if (!(operations[i].inputType === \"string\")) {\n                        _context.next = 7;\n                        break;\n                      }\n\n                      _context.next = 6;\n                      return new Promise(function (resolve, reject) {\n                        self.postMessage({\n                          command: \"prettyPrint\",\n                          data: {\n                            callbackid: self.addCallback(resolve),\n                            ast: opInput,\n                            language: language\n                          }\n                        });\n                      });\n\n                    case 6:\n                      opInput = _context.sent;\n\n                    case 7:\n                      // Run the operation\n                      opOutput = opClass.run(opInput, operations[i].args); // If needed, convert output data to AST\n\n                      if (!(operations[i].outputType === \"string\")) {\n                        _context.next = 12;\n                        break;\n                      }\n\n                      _context.next = 11;\n                      return new Promise(function (resolve, reject) {\n                        self.postMessage({\n                          command: \"parse\",\n                          data: {\n                            callbackid: self.addCallback(resolve),\n                            input: opOutput,\n                            language: language\n                          }\n                        });\n                      });\n\n                    case 11:\n                      opOutput = _context.sent;\n\n                    case 12:\n                      currentInput = opOutput;\n\n                    case 13:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _loop);\n            });\n            i = 0;\n\n          case 3:\n            if (!(i < operations.length)) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.delegateYield(_loop(i), \"t0\", 5);\n\n          case 5:\n            i++;\n            _context2.next = 3;\n            break;\n\n          case 8:\n            _context2.t1 = self;\n            _context2.t2 = language;\n            _context2.next = 12;\n            return new this.Promise(function (resolve, reject) {\n              self.postMessage({\n                command: \"prettyPrint\",\n                data: {\n                  callbackid: self.addCallback(resolve),\n                  ast: currentInput,\n                  language: language\n                }\n              });\n            });\n\n          case 12:\n            _context2.t3 = _context2.sent;\n            _context2.t4 = {\n              language: _context2.t2,\n              output: _context2.t3\n            };\n            _context2.t5 = {\n              command: \"complete\",\n              data: _context2.t4\n            };\n\n            _context2.t1.postMessage.call(_context2.t1, _context2.t5);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nself.addEventListener(\"message\", function (e) {\n  if (!e.data) return;\n  var data = e.data;\n  if (!data.command) return;\n\n  switch (data.command) {\n    case \"run\":\n      self.run(data.data.input, data.data.language, data.data.operations, data.data.operationClasses);\n      break;\n\n    case \"callback\":\n      self.callbacks[data.data.callbackid](data.data.data);\n      break;\n\n    default:\n      console.error(\"Invalid command \\\"\".concat(data.command, \"\\\"\"));\n  }\n});\n\n//# sourceURL=webpack:///./src/web/js/workers/Operation.worker.js?./node_modules/babel-loader/lib??ref--5");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n\n\n//# sourceURL=webpack:///./node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./src/core/operations/FindReplace.mjs":
/*!*********************************************!*\
  !*** ./src/core/operations/FindReplace.mjs ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\n\n\n/**\n * Find and replace operations for code\n */\nvar FindReplace = /*#__PURE__*/function () {\n  function FindReplace() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__(this, FindReplace);\n\n    this.name = \"Find / Replace\";\n    this.args = [{\n      name: \"Find text\",\n      type: \"string\",\n      default: \"\"\n    }, {\n      name: \"Replace text\",\n      type: \"string\",\n      default: \"\"\n    }];\n    this.languages = []; // Empty array = all languages\n\n    this.inputType = \"string\"; // Input is a string (not an AST object)\n\n    this.outputType = \"string\"; // Output is a string (not an AST object)\n\n    this.progress = false; // Don't pass this operation a progress function\n  }\n  /**\n   * Run function\n   *\n   * @param {string} input - The input code\n   * @param {Array} args - The operation arguments\n   * @returns {string} - The modified code\n   */\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__(FindReplace, [{\n    key: \"run\",\n    value: function run(input, args) {\n      return input.replace(args[0], args[1]);\n    }\n  }]);\n\n  return FindReplace;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FindReplace);\n\n//# sourceURL=webpack:///./src/core/operations/FindReplace.mjs?");

/***/ }),

/***/ "./src/core/operations/RemoveComments.mjs":
/*!************************************************!*\
  !*** ./src/core/operations/RemoveComments.mjs ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\n\n\n/**\n * Remove comments from code\n */\nvar RemoveComments = /*#__PURE__*/function () {\n  function RemoveComments() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__(this, RemoveComments);\n\n    this.name = \"Remove Comments\";\n    this.args = [];\n    this.languages = [\"powershell\"];\n    this.inputType = \"ast\";\n    this.outputType = \"ast\";\n    this.progress = false;\n  }\n  /**\n   * Run function\n   *\n   * @param {object} input - The input AST\n   * @param {Array} args - The operation arguments\n   * @returns {string} - The modified AST\n   */\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__(RemoveComments, [{\n    key: \"run\",\n    value: function run(input, args) {\n      var recurse = function recurse(obj) {\n        if (obj === null || obj === undefined) {\n          return;\n        }\n\n        if (typeof obj === \"string\") {\n          return;\n        }\n\n        if (Array.isArray(obj)) {\n          for (var i = 0; i < obj.length; i++) {\n            recurse(obj[i]);\n          }\n        }\n\n        if (Object.prototype.hasOwnProperty.call(obj, \"data\") && Object.prototype.hasOwnProperty.call(obj, \"type\")) {\n          if (obj.type === \"singleLineComment\" || obj.type === \"delimitedComment\") {\n            obj.data = null;\n            return;\n          }\n\n          recurse(obj.data);\n        }\n      };\n\n      recurse(input);\n      return input;\n    }\n  }]);\n\n  return RemoveComments;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (RemoveComments);\n\n//# sourceURL=webpack:///./src/core/operations/RemoveComments.mjs?");

/***/ }),

/***/ "./src/core/operations/ReplaceAliases.mjs":
/*!************************************************!*\
  !*** ./src/core/operations/ReplaceAliases.mjs ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\n\n\n/**\n * Operation to replace aliases with the full command name.\n * Also accepts custom command names\n */\nvar ReplaceAliases = /*#__PURE__*/function () {\n  function ReplaceAliases() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__(this, ReplaceAliases);\n\n    this.aliases = {\n      ac: \"Add-Content\",\n      clc: \"Clear-Content\",\n      cli: \"Clear-Item\",\n      clv: \"Clear-Variable\",\n      compare: \"Compare-Object\",\n      cvpa: \"Convert-Path\",\n      copy: \"Copy-Item\",\n      cp: \"Copy-Item\",\n      cpi: \"Copy-Item\",\n      epal: \"Export-Alias\",\n      \"%\": \"ForEach-Object\",\n      foreach: \"ForEach-Object\",\n      gal: \"Get-Alias\",\n      dir: \"Get-ChildItem\",\n      gci: \"Get-ChildItem\",\n      ls: \"Get-ChildItem\",\n      gcm: \"Get-Command\",\n      cat: \"Get-Content\",\n      gc: \"Get-Content\",\n      type: \"Get-Content\",\n      help: \"Get-Help\",\n      man: \"Get-Help\",\n      gi: \"Get-Item\",\n      gl: \"Get-Location\",\n      pwd: \"Get-Location\",\n      gm: \"Get-Member\",\n      gmo: \"Get-Module\",\n      gdr: \"Get-PSDrive\",\n      gv: \"Get-Variable\",\n      group: \"Group-Object\",\n      iex: \"Invoke-Expression\",\n      ipmo: \"Import-Module\",\n      ii: \"Invoke-Item\",\n      measure: \"Measure-Object\",\n      mi: \"Move-Item\",\n      move: \"Move-Item\",\n      mv: \"Move-Item\",\n      nal: \"New-Alias\",\n      ni: \"New-Item\",\n      nmo: \"New-Module\",\n      nv: \"New-Variable\",\n      popd: \"Pop-Location\",\n      pushd: \"Push-Location\",\n      del: \"Remove-Item\",\n      erase: \"Remove-Item\",\n      rd: \"Remove-Item\",\n      ri: \"Remove-Item\",\n      rm: \"Remove-Item\",\n      rmdir: \"Remove-Item\",\n      rmo: \"Remove-Module\",\n      rv: \"Remove-Variable\",\n      ren: \"Rename-Item\",\n      rni: \"Rename-Item\",\n      rvpa: \"Resolve-Path\",\n      select: \"Select-Object\",\n      sal: \"Set-Alias\",\n      sc: \"Set-Content\",\n      si: \"Set-Item\",\n      cd: \"Set-Location\",\n      chdir: \"Set-Location\",\n      sl: \"Set-Location\",\n      set: \"Set-Variable\",\n      sv: \"Set-Variable\",\n      sort: \"Sort-Object\",\n      tee: \"Tee-Object\",\n      \"?\": \"Where-Object\",\n      where: \"Where-Object\"\n    };\n    this.name = \"Replace Aliases\";\n    this.args = [{\n      name: \"Alias Name\",\n      type: \"dropdown\",\n      default: \"All default aliases\",\n      options: [\"All default aliases\", \"Custom\"].concat(Object.keys(this.aliases).sort())\n    }, {\n      name: \"Custom Alias Name\",\n      type: \"string\",\n      default: \"\"\n    }, {\n      name: \"Custom Full Name\",\n      type: \"string\",\n      default: \"\"\n    }];\n    this.languages = [\"powershell\"];\n    this.inputType = \"ast\";\n    this.outputType = \"ast\";\n    this.progress = false;\n  }\n  /**\n   * Pretty prints a powershell AST - COPIED FROM POWERSHELL.MJS FOR NOW\n   *\n   * @param {object} ast - The AST to pretty print\n   * @returns {string} - Pretty printed code\n   */\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__(ReplaceAliases, [{\n    key: \"prettyPrint\",\n    value: function prettyPrint(ast) {\n      var recurse = function recurse(obj) {\n        if (obj === null || obj === undefined) {\n          return \"\";\n        }\n\n        if (typeof obj === \"string\") {\n          return obj;\n        }\n\n        if (Array.isArray(obj)) {\n          var out = \"\";\n\n          for (var i = 0; i < obj.length; i++) {\n            out += recurse(obj[i]);\n          }\n\n          return out;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(obj, \"data\")) {\n          return recurse(obj.data);\n        }\n\n        return \"\";\n      };\n\n      return recurse(ast);\n    }\n    /**\n     * Finds a genericToken token in the data and checks if the\n     * string of that token matches an alias.\n     *\n     * @param {object} data - The data to search and replace in\n     * @param {string} aliasName - The alias to replace\n     * @param {string} fullName - The full version of the alias\n     */\n\n  }, {\n    key: \"replaceAlias\",\n    value: function replaceAlias(data, aliasName, fullName) {\n      var recurse = function (obj) {\n        if (obj === null || obj === undefined) {\n          return;\n        }\n\n        if (typeof obj === \"string\") {\n          return;\n        }\n\n        if (Array.isArray(obj)) {\n          for (var i = 0; i < obj.length; i++) {\n            recurse(obj[i]);\n          }\n\n          return;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(obj, \"data\") && Object.prototype.hasOwnProperty.call(obj, \"type\")) {\n          if (obj.type === \"genericToken\") {\n            var text = this.prettyPrint(obj.data);\n\n            if (aliasName === \"All default aliases\") {\n              if (Object.prototype.hasOwnProperty.call(this.aliases, text)) {\n                obj.data = this.aliases[text];\n              }\n            } else if (text === aliasName) {\n              obj.data = fullName;\n            }\n\n            return;\n          }\n\n          recurse(obj.data);\n        }\n      }.bind(this);\n\n      recurse(data);\n    }\n    /**\n     * Run function\n     *\n     * @param {object} input - The input code AST\n     * @param {Array} args - The operation arguments\n     * @returns {object} - The modified code\n     */\n\n  }, {\n    key: \"run\",\n    value: function run(input, args) {\n      var recurse = function (obj) {\n        if (obj === null || obj === undefined) {\n          return;\n        }\n\n        if (typeof obj === \"string\") {\n          return;\n        }\n\n        if (Array.isArray(obj)) {\n          for (var i = 0; i < obj.length; i++) {\n            recurse(obj[i]);\n          }\n\n          return;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(obj, \"data\") && Object.prototype.hasOwnProperty.call(obj, \"type\")) {\n          if (obj.type === \"pipeline\") {\n            if (args[0] === \"All default aliases\") {\n              this.replaceAlias(obj.data, args[0], \"\");\n            } else if (args[0] === \"Custom\") {\n              this.replaceAlias(obj.data, args[1], args[2]);\n            } else {\n              this.replaceAlias(obj.data, args[0], this.aliases[args[0]]);\n            }\n\n            return;\n          }\n\n          recurse(obj.data);\n        }\n      }.bind(this);\n\n      recurse(input);\n      return input;\n    }\n  }]);\n\n  return ReplaceAliases;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReplaceAliases);\n\n//# sourceURL=webpack:///./src/core/operations/ReplaceAliases.mjs?");

/***/ }),

/***/ "./src/core/operations/ReplaceFormatExpression.mjs":
/*!*********************************************************!*\
  !*** ./src/core/operations/ReplaceFormatExpression.mjs ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\n\n\n/**\n * Replaces Format Expressions with the actual text\n */\nvar ReplaceFormatExpression = /*#__PURE__*/function () {\n  function ReplaceFormatExpression() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__(this, ReplaceFormatExpression);\n\n    this.name = \"Replace Format Expressions\";\n    this.args = [];\n    this.languages = [\"powershell\"];\n    this.inputType = \"ast\";\n    this.outputType = \"string\";\n    this.progress = false;\n  }\n  /**\n   * Creates an array of the format expression strings\n   *\n   * @param {object} formatExpressionData - The section of the AST to traverse\n   * @returns {Array} - The expression strings\n   */\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__(ReplaceFormatExpression, [{\n    key: \"getFormatExpressionStrings\",\n    value: function getFormatExpressionStrings(formatExpressionData) {\n      var recurse = function (obj) {\n        if (obj === null || obj === undefined) {\n          return null;\n        }\n\n        if (typeof obj === \"string\") {\n          return null;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(obj, \"type\") && Object.prototype.hasOwnProperty.call(obj, \"data\")) {\n          if (obj.type === \"verbatimStringLiteral\") {\n            // Only pretty print the string characters\n            return this.prettyPrint(obj.data[1]);\n          }\n\n          return recurse(obj.data);\n        }\n\n        if (Array.isArray(obj)) {\n          var out = [];\n\n          for (var i = 0; i < obj.length; i++) {\n            var data = recurse(obj[i]);\n\n            if (data !== null) {\n              if (Array.isArray(data)) {\n                out = out.concat(data);\n              } else {\n                out.push(data);\n              }\n            }\n          }\n\n          if (out.length === 0) {\n            return null;\n          }\n\n          if (out.length === 1) {\n            return out[0];\n          }\n\n          return out;\n        }\n\n        return null;\n      }.bind(this);\n\n      return recurse(formatExpressionData);\n    }\n    /**\n     * Replaces a format expression with the actual string\n     *\n     * @param {Array} formatExpression - The format expression in the syntax tree\n     * @returns {string} - The replaced format expression\n     */\n\n  }, {\n    key: \"replaceFormatExpression\",\n    value: function replaceFormatExpression(formatExpression) {\n      // console.log(formatExpression);\n      var outStr = this.prettyPrint(formatExpression[0]); // We can cheat and just use the last element in the formatExpression array as this will account for optional whitespace\n\n      var strings = this.getFormatExpressionStrings(formatExpression[formatExpression.length - 1]);\n\n      if (strings === null || strings.length === 0) {\n        // Pretty print the expression anyway so the code still works\n        return this.prettyPrint(formatExpression);\n      }\n\n      for (var i = 0; i < strings.length; i++) {\n        outStr = outStr.replace(\"{\".concat(i, \"}\"), strings[i]);\n      }\n\n      return outStr;\n    }\n    /**\n     * Pretty prints a powershell AST - COPIED FROM POWERSHELL.MJS FOR NOW\n     *\n     * @param {object} ast - The AST to pretty print\n     * @returns {string} - Pretty printed code\n     */\n\n  }, {\n    key: \"prettyPrint\",\n    value: function prettyPrint(ast) {\n      var recurse = function recurse(obj) {\n        if (obj === null || obj === undefined) {\n          return \"\";\n        }\n\n        if (typeof obj === \"string\") {\n          return obj;\n        }\n\n        if (Array.isArray(obj)) {\n          var out = \"\";\n\n          for (var i = 0; i < obj.length; i++) {\n            out += recurse(obj[i]);\n          }\n\n          return out;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(obj, \"data\")) {\n          return recurse(obj.data);\n        }\n\n        return \"\";\n      };\n\n      return recurse(ast);\n    }\n    /**\n     * Run function\n     *\n     * @param {object} input - The input AST\n     * @param {Array} args - The operation arguments\n     * @returns {object} - The modified AST\n     */\n\n  }, {\n    key: \"run\",\n    value: function run(input, args) {\n      var recurse = function (obj) {\n        if (obj === null || obj === undefined) {\n          return null;\n        }\n\n        if (typeof obj === \"string\") {\n          return obj;\n        }\n\n        if (Array.isArray(obj)) {\n          var _out = [];\n\n          for (var i = 0; i < obj.length; i++) {\n            _out.push(recurse(obj[i]));\n          }\n\n          return _out;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(obj, \"type\") && Object.prototype.hasOwnProperty.call(obj, \"data\")) {\n          if (obj.type === \"formatExpression\") {\n            return this.replaceFormatExpression(obj.data);\n          }\n        }\n\n        if (Object.prototype.hasOwnProperty.call(obj, \"data\")) {\n          obj.data = recurse(obj.data);\n          return obj;\n        }\n\n        return obj;\n      }.bind(this);\n\n      var out = recurse(input);\n      return this.prettyPrint(out);\n    }\n  }]);\n\n  return ReplaceFormatExpression;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReplaceFormatExpression);\n\n//# sourceURL=webpack:///./src/core/operations/ReplaceFormatExpression.mjs?");

/***/ }),

/***/ "./src/core/operations/debug/LogAST.mjs":
/*!**********************************************!*\
  !*** ./src/core/operations/debug/LogAST.mjs ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\n\n\n/**\n * Logs the parsed AST to the console\n */\nvar LogAST = /*#__PURE__*/function () {\n  function LogAST() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__(this, LogAST);\n\n    this.name = \"(DEBUG) Log AST to console\";\n    this.args = [];\n    this.languages = []; // Empty array = all languages\n\n    this.inputType = \"ast\"; // Input is a string (not an AST object)\n\n    this.outputType = \"ast\"; // Output is a string (not an AST object)\n\n    this.progress = false; // Don't pass this operation a progress function\n  }\n  /**\n   * Run function\n   *\n   * @param {Object} input - The input code\n   * @param {Array} args - The operation arguments\n   * @returns {Object} - The unmodified code\n   */\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__(LogAST, [{\n    key: \"run\",\n    value: function run(input, args) {\n      console.log(input);\n      return input;\n    }\n  }]);\n\n  return LogAST;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (LogAST);\n\n//# sourceURL=webpack:///./src/core/operations/debug/LogAST.mjs?");

/***/ }),

/***/ "./src/core/operations/operations.mjs":
/*!********************************************!*\
  !*** ./src/core/operations/operations.mjs ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _FindReplace_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FindReplace.mjs */ \"./src/core/operations/FindReplace.mjs\");\n/* harmony import */ var _RemoveComments_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RemoveComments.mjs */ \"./src/core/operations/RemoveComments.mjs\");\n/* harmony import */ var _ReplaceAliases_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ReplaceAliases.mjs */ \"./src/core/operations/ReplaceAliases.mjs\");\n/* harmony import */ var _ReplaceFormatExpression_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ReplaceFormatExpression.mjs */ \"./src/core/operations/ReplaceFormatExpression.mjs\");\n/* harmony import */ var _debug_LogAST_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug/LogAST.mjs */ \"./src/core/operations/debug/LogAST.mjs\");\n\n\n\n/**\n * Handles importing of all operations\n */\n// Operation imports\n\n\n\n // Debug operation imports\n\n\n\nvar Operations = /*#__PURE__*/function () {\n  function Operations() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__(this, Operations);\n\n    this.operations = {};\n    this.debugoperations = {}; // Create an object containing all operations so we can refer\n    // to them by name (filename)\n\n    this.operations.findreplace = _FindReplace_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    this.operations.removecomments = _RemoveComments_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n    this.operations.replacealiases = _ReplaceAliases_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n    this.operations.replaceformatexpression = _ReplaceFormatExpression_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n    this.debugoperations.logast = _debug_LogAST_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\n  }\n  /**\n   * Finds an operation and returns it\n   *\n   * @param {string} opName - The operation name\n   * @returns {object} - The operation class\n   */\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__(Operations, [{\n    key: \"getOperation\",\n    value: function getOperation(opName) {\n      var lowerName = opName.toLowerCase();\n\n      if (this.operations[lowerName] !== undefined) {\n        return new this.operations[lowerName]();\n      }\n\n      if (this.debugoperations[lowerName] !== undefined) {\n        return new this.debugoperations[lowerName]();\n      }\n\n      throw Error(\"Operation \\\"\".concat(opName, \"\\\" does not exist!\"));\n    }\n    /**\n     * Gets the details of an operation\n     *\n     * @param {string} opName - The operation name\n     * @returns {object} - The operation details\n     */\n\n  }, {\n    key: \"getOperationDetails\",\n    value: function getOperationDetails(opName) {\n      var op = this.getOperation(opName);\n      return {\n        name: opName,\n        displayName: op.name,\n        args: op.args,\n        languages: op.languages,\n        inputType: op.inputType,\n        outputType: op.outputType,\n        progress: op.progress\n      };\n    }\n    /**\n     * Gets a list of operations and their options.\n     * Returns an object containing the details for all operations\n     *\n     * @returns {object} - Operations list\n     */\n\n  }, {\n    key: \"getOperationList\",\n    value: function getOperationList() {\n      var opNames = Object.keys(this.operations);\n      var operations = {};\n\n      for (var i = 0; i < opNames.length; i++) {\n        operations[opNames[i]] = this.getOperationDetails(opNames[i]);\n      }\n\n      return operations;\n    }\n    /**\n     * Gets a list of debug operations and their options.\n     * Returns an object containing the details for all debug operations\n     *\n     * @returns {object} - Debug operations list\n     */\n\n  }, {\n    key: \"getDebugOperationList\",\n    value: function getDebugOperationList() {\n      var opNames = Object.keys(this.debugoperations);\n      var operations = {};\n\n      for (var i = 0; i < opNames.length; i++) {\n        operations[opNames[i]] = this.getOperationDetails(opNames[i]);\n      }\n\n      return operations;\n    }\n  }]);\n\n  return Operations;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Operations);\n\n//# sourceURL=webpack:///./src/core/operations/operations.mjs?");

/***/ }),

/***/ "./src/web/js/helpers/OperationHelper.mjs":
/*!************************************************!*\
  !*** ./src/web/js/helpers/OperationHelper.mjs ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _core_operations_operations_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/operations/operations.mjs */ \"./src/core/operations/operations.mjs\");\n\n\n\n\n\n/**\n * Helper for loading and running operations\n */\n\n\nvar OperationHelper = /*#__PURE__*/function () {\n  function OperationHelper(App) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__(this, OperationHelper);\n\n    this.App = App;\n    this.callbacks = {};\n    this.currentId = 0;\n    this.operations = new _core_operations_operations_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n  }\n  /**\n   * Gets a new instance of the class for the specified operation\n   *\n   * @param {string} opName - The name of the operation\n   * @returns {object} - Operation class\n   */\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__(OperationHelper, [{\n    key: \"getOperation\",\n    value: function getOperation(opName) {\n      var Operation = this.operations.getOperation(opName);\n      return Operation;\n    }\n    /**\n     * Gets the details for an operation\n     *\n     * @param {string} opName - The name of the operation\n     * @returns {object} - Operation details\n     */\n\n  }, {\n    key: \"getOperationDetails\",\n    value: function getOperationDetails(opName) {\n      return this.operations.getOperationDetails(opName);\n    }\n    /**\n     * Get a list of operations.\n     * Returns an object containing the details for all operations\n     *\n     * @returns {object} - Operation list\n     */\n\n  }, {\n    key: \"getOperationList\",\n    value: function getOperationList() {\n      return this.operations.getOperationList();\n    }\n    /**\n     * Get a list of debug operations.\n     * Returns an object containing the details for all debug operations\n     *\n     * @returns {object} - Debug operation list\n     */\n\n  }, {\n    key: \"getDebugOperationList\",\n    value: function getDebugOperationList() {\n      return this.operations.getDebugOperationList();\n    }\n    /**\n     * Populates the UI operations list with a list of operations\n     *\n     * @param {boolean} debug - Set to true to include debug operations\n     */\n\n  }, {\n    key: \"populateOperationsList\",\n    value: function populateOperationsList() {\n      var debug = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var operationsList = document.getElementById(\"operationsList\");\n      var opList = this.getOperationList();\n      var opNames = Object.keys(opList);\n\n      for (var i = 0; i < opNames.length; i++) {\n        operationsList.append(this.createOperationListHtml(opList[opNames[i]]));\n      }\n\n      if (debug) {\n        opList = this.getDebugOperationList();\n        opNames = Object.keys(opList);\n\n        for (var _i = 0; _i < opNames.length; _i++) {\n          operationsList.append(this.createOperationListHtml(opList[opNames[_i]]));\n        }\n      }\n    }\n    /**\n     * Clears the UI operations list\n     */\n\n  }, {\n    key: \"clearOperationsList\",\n    value: function clearOperationsList() {\n      var operationsList = document.getElementById(\"operationsList\");\n\n      for (var i = operationsList.children.length - 1; i >= 0; i--) {\n        operationsList.children.item(i).remove();\n      }\n    }\n    /**\n     * Creates the HTML for an operation to be displayed in the selection list\n     *\n     * @param {object} operation - The operation details\n     * @returns {HTMLElement} - The created operation HTML\n     */\n\n  }, {\n    key: \"createOperationListHtml\",\n    value: function createOperationListHtml(operation) {\n      var operationElement = document.createElement(\"li\");\n      operationElement.innerText = operation.displayName;\n      operationElement.setAttribute(\"opName\", operation.name);\n      return operationElement;\n    }\n    /**\n     * Creates the HTML for an operation to be displayed in the main pane\n     *\n     * @param {object} operation - The operation details\n     * @returns {HTMLElement} - The created operation HTML\n     */\n\n  }, {\n    key: \"createOperationHtml\",\n    value: function createOperationHtml(operation) {\n      var argContainer = document.createElement(\"div\");\n      argContainer.id = \"argContainer\";\n\n      for (var i = 0; i < operation.args.length; i++) {\n        var arg = operation.args[i];\n        var label = document.createElement(\"label\");\n        label.innerText = arg.name;\n        label.classList.add(\"opArgLabel\");\n        argContainer.appendChild(label);\n\n        switch (arg.type) {\n          case \"string\":\n            {\n              var strInput = document.createElement(\"input\");\n              strInput.setAttribute(\"type\", \"text\");\n              strInput.classList.add(\"operationArgument\");\n              strInput.value = arg.default;\n              argContainer.appendChild(strInput);\n              break;\n            }\n\n          case \"boolean\":\n            {\n              var checkInput = document.createElement(\"input\");\n              checkInput.setAttribute(\"type\", \"checkbox\");\n              checkInput.classList.add(\"operationArgument\");\n              checkInput.checked = arg.default;\n              argContainer.appendChild(checkInput);\n              break;\n            }\n\n          case \"dropdown\":\n            {\n              var dropInput = document.createElement(\"select\");\n              dropInput.classList.add(\"operationArgument\");\n              dropInput.setAttribute(\"type\", \"dropdown\");\n\n              for (var x = 0; x < arg.options.length; x++) {\n                var opElement = document.createElement(\"option\");\n                opElement.setAttribute(\"value\", arg.options[x]);\n                opElement.innerText = arg.options[x];\n\n                if (arg.options[x] === arg.default) {\n                  opElement.setAttribute(\"selected\", \"selected\");\n                }\n\n                dropInput.appendChild(opElement);\n              }\n\n              argContainer.appendChild(dropInput);\n              break;\n            }\n\n          default:\n            console.error(\"Unknown argument type \\\"\".concat(arg.type, \"\\\".\"));\n        }\n\n        argContainer.appendChild(document.createElement(\"br\"));\n      }\n\n      return argContainer;\n    }\n    /**\n     * Runs the operations by sending them to the operationWorker\n     */\n\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__.mark(function _callee() {\n        var operationList, operationElements, operationsUsed, opsList, i, opElement, args, argElements, x, argElement, opDetails, operationClasses, opNames, _i2;\n\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Create a list of operations to run\n                operationList = document.getElementById(\"flowList\");\n                operationElements = operationList.children;\n                operationsUsed = {};\n                opsList = [];\n                i = 0;\n\n              case 5:\n                if (!(i < operationElements.length)) {\n                  _context.next = 32;\n                  break;\n                }\n\n                opElement = operationElements.item(i);\n                operationsUsed[opElement.getAttribute(\"opName\")] = true;\n                args = [];\n                argElements = opElement.getElementsByClassName(\"operationArgument\");\n                x = 0;\n\n              case 11:\n                if (!(x < argElements.length)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                argElement = argElements.item(x);\n                _context.t0 = argElement.getAttribute(\"type\");\n                _context.next = _context.t0 === \"text\" ? 16 : _context.t0 === \"checkbox\" ? 18 : _context.t0 === \"dropdown\" ? 20 : 22;\n                break;\n\n              case 16:\n                args.push(argElement.value);\n                return _context.abrupt(\"break\", 23);\n\n              case 18:\n                args.push(argElement.checked);\n                return _context.abrupt(\"break\", 23);\n\n              case 20:\n                args.push(argElement.value);\n                return _context.abrupt(\"break\", 23);\n\n              case 22:\n                console.error(\"Unknown input element type \".concat(argElement.getAttribute(\"type\")));\n\n              case 23:\n                x++;\n                _context.next = 11;\n                break;\n\n              case 26:\n                opDetails = this.getOperationDetails(opElement.getAttribute(\"opName\"));\n                opDetails.args = args;\n                opsList.push(opDetails);\n\n              case 29:\n                i++;\n                _context.next = 5;\n                break;\n\n              case 32:\n                operationClasses = {};\n                opNames = Object.keys(operationsUsed);\n\n                for (_i2 = 0; _i2 < opNames.length; _i2++) {\n                  // Create a new instance of the operation and add it to the object\n                  operationClasses[opNames[_i2]] = this.getOperation(opNames[_i2]);\n                }\n\n                this.App.AppWorker.postMessage({\n                  command: \"run\",\n                  data: {\n                    language: \"powershell\",\n                    encoding: \"utf-8\",\n                    operations: opsList\n                  }\n                });\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function run() {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n    /**\n     * Executed when the OperationWorker completes execution\n     *\n     * @param {object} output - The output data\n     * @param {string} language - The output language\n     */\n\n  }, {\n    key: \"runComplete\",\n    value: function () {\n      var _runComplete = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__.mark(function _callee2(output, language) {\n        var outputData;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.App.OutputHelper.updateOutput(output, language);\n                _context2.next = 3;\n                return this.App.OutputHelper.getOutput(true);\n\n              case 3:\n                outputData = _context2.sent;\n                document.getElementById(\"outputArea\").innerHTML = outputData;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function runComplete(_x, _x2) {\n        return _runComplete.apply(this, arguments);\n      }\n\n      return runComplete;\n    }()\n  }]);\n\n  return OperationHelper;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (OperationHelper);\n\n//# sourceURL=webpack:///./src/web/js/helpers/OperationHelper.mjs?");

/***/ })

/******/ });